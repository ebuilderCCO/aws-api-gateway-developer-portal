swagger: "2.0"
info:
  version: "2.0.0"
  title: "MyProduct"
host: "apigw.ebuilder.io"
basePath: "/myproduct"
schemes:
- "https"
paths:
  /1.0/myproduct:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "MyProduct"
        required: true
        schema:
          $ref: "#/definitions/MyProduct"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductResponse"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: MY_PRODUCT_MI_BASE_URI@/1.0/myproduct"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "MyProduct"
        required: true
        schema:
          $ref: "#/definitions/MyProduct"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductResponse"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: MY_PRODUCT_MI_BASE_URI@/1.0/myproduct"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductResponse"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'PUT,POST'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /1.0/myproduct/batch:
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "MyProductsList"
        required: true
        schema:
          $ref: "#/definitions/MyProductsList"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductResponse"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: MY_PRODUCT_MI_BASE_URI@/1.0/myproduct/batch"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductResponse"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /1.0/myproduct/merge:
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "MergeMyProduct"
        required: true
        schema:
          $ref: "#/definitions/MergeMyProduct"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MergeMyProduct"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: MY_PRODUCT_MI_BASE_URI@/1.0/myproduct/merge"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MergeMyProduct"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /1.0/myproduct/popdate:
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "MyProduct"
        required: true
        schema:
          $ref: "#/definitions/MyProduct"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductResponse"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: MY_PRODUCT_MI_BASE_URI@/1.0/myproduct/popdate"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductResponse"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /1.0/myproduct/productandwarranty/{myProductId}/{timeRegion}/{timeZone}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "myProductId"
        in: "path"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - name: "timeRegion"
        in: "path"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "timeZone"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductResponse"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.path.myProductId: "method.request.path.myProductId"
          integration.request.path.timeZone: "method.request.path.timeZone"
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
          integration.request.path.timeRegion: "method.request.path.timeRegion"
        uri: "@env: MY_PRODUCT_MI_BASE_URI@/1.0/myproduct/productandwarranty/{myProductId}/{timeRegion}/{timeZone}"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "timeRegion"
        in: "path"
        required: true
        type: "string"
      - name: "myProductId"
        in: "path"
        required: true
        type: "string"
      - name: "timeZone"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductResponse"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /1.0/myproduct/user/{user}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "user"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductsList"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.path.user: "method.request.path.user"
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: MY_PRODUCT_MI_BASE_URI@/1.0/myproduct/user/{user}"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductsList"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /1.0/myproduct/warranty/{myProductId}/{timeRegion}/{timeZone}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "myProductId"
        in: "path"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - name: "timeRegion"
        in: "path"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "timeZone"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductResponse"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.path.myProductId: "method.request.path.myProductId"
          integration.request.path.timeZone: "method.request.path.timeZone"
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
          integration.request.path.timeRegion: "method.request.path.timeRegion"
        uri: "@env: MY_PRODUCT_MI_BASE_URI@/1.0/myproduct/warranty/{myProductId}/{timeRegion}/{timeZone}"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "timeRegion"
        in: "path"
        required: true
        type: "string"
      - name: "myProductId"
        in: "path"
        required: true
        type: "string"
      - name: "timeZone"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductResponse"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /1.0/myproduct/{id}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProduct"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: MY_PRODUCT_MI_BASE_URI@/1.0/myproduct/{id}"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    delete:
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductResponse"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: MY_PRODUCT_MI_BASE_URI@/1.0/myproduct/{id}"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProduct"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'GET,DELETE'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /v2/myproducts:
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-guid,x-channel-name,x-request-token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}"
        requestTemplates:
          application/json: "{\"statusCode\" : 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "query"
        required: false
        type: "string"
      - name: "imei"
        in: "query"
        required: false
        type: "string"
      - name: "userAgent"
        in: "query"
        required: false
        type: "string"
      - name: "manufacturer"
        in: "query"
        required: false
        type: "string"
      - name: "model"
        in: "query"
        required: false
        type: "string"
      - name: "alias"
        in: "query"
        required: false
        type: "string"
      - name: "x-guid"
        in: "header"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductRespGETV2"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "$input.json('$.myProducts')"
          .*"httpStatus":5\d{2}.*:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "$input.path('$.errorMessage')"
          .*"httpStatus":4\d{2}.*:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "$input.path('$.errorMessage')"
        requestTemplates:
          application/json: "{\"userId\":\"$input.params('userId')\",\"imei\":\"$input.params('imei')\",\"userAgent\":\"$input.params('userAgent')\",\"manufacturer\":\"$input.params('manufacturer')\",\"model\":\"$input.params('model')\",\"alias\":\"$input.params('alias')\",\"guid\":\"$input.params('x-guid')\"}"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/@lambda:read-myproduct-by-user-id@/invocations"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "MyProductReqPOSTV2"
        required: true
        schema:
          $ref: "#/definitions/MyProductReqPOSTV2"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductRespPOSTV2Mobile"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/ErrorV2"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/ErrorV2"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/ErrorV2"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ErrorV2"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/@lambda:register-myproduct-read-by-user@/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "MyProductReqPUTV2"
        required: true
        schema:
          $ref: "#/definitions/MyProductReqPUTV2"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProduct"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "$input.json('$.myProduct')"
          .*"httpStatus":5\d{2}.*:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "$input.path('$.errorMessage')"
          .*"httpStatus":4\d{2}.*:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "$input.path('$.errorMessage')"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/@lambda:update-myproduct@/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
  /v2/myproducts/{id}:
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-guid,x-channel-name,x-request-token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}"
        requestTemplates:
          application/json: "{\"statusCode\" : 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
    get:
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      - name: "userAgent"
        in: "query"
        required: false
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/MyProductV2"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/ErrorV2"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/ErrorV2"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/ErrorV2"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/ErrorV2"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/@lambda:read-myproduct@/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
definitions:
  MergeMyProduct:
    type: "object"
    properties:
      fromPersonRef:
        type: "string"
        description: "Anonymous user id"
      toPersonRef:
        type: "string"
        description: "Registered user id"
  MyProductsList:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        $ref: "#/definitions/MyProductsListValueItem"
  MyProductsListValueItem:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Only used when returning a MyProduct"
      personref:
        type: "string"
        description: "Person Id of the my product record"
      productref:
        type: "string"
        description: "Product Id of the my product record"
      itemid:
        type: "string"
        description: "Serial Number or the IMEI of the product"
      alias:
        type: "string"
        description: "Alias of my product. Default to the model name"
      productCode:
        type: "string"
        description: "Product code"
      popDate:
        type: "string"
        description: "popDate of the device"
      warranty:
        type: "string"
        description: "Warranty date"
      manufacturer:
        type: "string"
        description: "Manufacturer"
      modelCode:
        type: "string"
        description: "modelCode"
      type:
        type: "string"
        description: "type"
      version:
        type: "string"
        description: "version - used only when updates"
  MyProductResponse:
    type: "object"
    additionalProperties:
      type: "object"
      description: "Map Object"
      properties: {}
  MyProduct:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Only used when returning a MyProduct"
      personref:
        type: "string"
        description: "Person Id of the my product record"
      productref:
        type: "string"
        description: "Product Id of the my product record"
      itemid:
        type: "string"
        description: "Serial Number or the IMEI of the product"
      alias:
        type: "string"
        description: "Alias of my product. Default to the model name"
      productCode:
        type: "string"
        description: "Product code"
      popDate:
        type: "string"
        description: "popDate of the device"
      warranty:
        type: "string"
        description: "Warranty date"
      manufacturer:
        type: "string"
        description: "Manufacturer"
      modelCode:
        type: "string"
        description: "modelCode"
      type:
        type: "string"
        description: "type"
      version:
        type: "string"
        description: "version - used only when updates"
  MyProductReqPOSTV2:
    type: "object"
    properties:
      manufacturer:
        type: "string"
        description: "Manufacturer"
      model:
        type: "string"
        description: "model"
      userAgent:
        type: "string"
        description: "user agent"
      imei:
        type: "string"
        description: "Device imei"
      userId:
        type: "string"
        description: "user id"
      alias:
        type: "string"
        description: "Alias of my product. Default to the model name"
    required: ['manufacturer','model','userAgent', 'imei','userId', 'alias']
  MyProductReqPUTV2:
    type: "object"
    properties:
      id:
        type: "string"
        description: "id"
      imei:
        type: "string"
        description: "Device id"
      alias:
        type: "string"
        description: "Alias of my product. Default to the model name"
    required: ['id']
  Error:
    type: "object"
    properties:
      errorMessage:
        type: "string"
        description: "error message"
  MyProductV2:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Only used when returning a MyProduct"
      userId:
        type: "string"
        description: "Person Id of the my product record"
      imei:
        type: "string"
        description: "device id = imei"
      alias:
        type: "string"
        description: "Alias of my product. Default to the model name"
      productId:
        type: "string"
        description: "Product code"
      manufacturer:
        type: "string"
        description: "Manufacturer"
      model:
        type: "string"
        description: "model"
      marketingName:
        type: "string"
        description: "version - used only when updates"
      vendor:
        type: "string"
        description: "vendor"
      yearReleased:
        type: "integer"
        description: "year released"
      imageURI:
        type: "string"
        description: "image uri"
      imageThumbURI:
        type: "string"
        description: "image thumb uri"
      osName:
        type: "string"
        description: "os name"
      osAndroid:
        type: "boolean"
        description: "os android"
      osIOs:
        type: "boolean"
        description: "image thumb uri"
      mobileDevice:
        type: "boolean"
        description: "mobile device"
      isMobilePhone:
        type: "boolean"
        description: "is mobile phone"
      isTablet:
        type: "boolean"
        description: "is tablet"
    required: ['id','productId','userId','manufacturer','model','marketingName']
  MyProductV2Mobile:
    type: "object"
    required: ['id','productId','userId','manufacturer','model','marketingName']
    properties:
      yearReleased:
        type: "integer"
        description: "year released"
      vendor:
        type: "string"
        description: "vendor"
      mobileDevice:
        type: "boolean"
        description: "mobile device"
      userId:
        type: "string"
        description: "Person Id of the my product record"
      manufacturer:
        type: "string"
        description: "Manufacturer"
      marketingName:
        type: "string"
        description: "version - used only when updates"
      osAndroid:
        type: "boolean"
        description: "os android"
      osName:
        type: "string"
        description: "os name"
      isTablet:
        type: "boolean"
        description: "is tablet"
      alias:
        type: "string"
        description: "Alias of my product. Default to the model name"
      osIOs:
        type: "boolean"
        description: "image thumb uri"
      imageURI:
        type: "string"
        description: "image uri"
      imei:
        type: "string"
        description: "device id = imei"
      model:
        type: "string"
        description: "model"
      isMobilePhone:
        type: "boolean"
        description: "is mobile phone"
      id:
        type: "string"
        description: "Only used when returning a MyProduct"
      imageThumbURI:
        type: "string"
        description: "image thumb uri"
      productId:
        type: "string"
        description: "Product code"
      isCurrentDevice:
        type: "boolean"
        description: "Dynamically calculated field"
  MyProductRespGETV2:
    type: "array"
    items:
      $ref: "#/definitions/MyProductV2"
  MyProductRespPOSTV2Mobile:
    type: "array"
    items:
      $ref: "#/definitions/MyProductV2Mobile"
  ErrorV2:
    type: "object"
    properties:
      message:
        type: "string"
      type:
        type: "string"
      code:
        type: "number"
      requestId:
        type: "string"
    title: "Error Schema"