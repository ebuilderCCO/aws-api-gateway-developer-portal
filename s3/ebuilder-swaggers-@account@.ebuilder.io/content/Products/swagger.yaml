---
swagger: "2.0"
info:
  version: "2.0.0"
  title: "Product"
host: "apigw.ebuilder.io"
basePath: "/product"
schemes:
- "https"
paths:
  /1.0/product:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ProductsList"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: PRODUCT_MI_BASE_URI@/1.0/product"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "Product"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Product"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: PRODUCT_MI_BASE_URI@/1.0/product"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "http"
    put:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - in: "body"
        name: "Product"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Product"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: PRODUCT_MI_BASE_URI@/1.0/product"
        passthroughBehavior: "when_no_match"
        httpMethod: "PUT"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Product"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /1.0/product/all:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/StrList"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: PRODUCT_MI_BASE_URI@/1.0/product/all"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/StrList"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /1.0/product/manufacturer/{manufacturer}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - name: "manufacturer"
        in: "path"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/StrList"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.path.manufacturer: "method.request.path.manufacturer"
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: PRODUCT_MI_BASE_URI@/1.0/product/manufacturer/{manufacturer}"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "manufacturer"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/StrList"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /1.0/product/manufacturers:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/StrList"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: PRODUCT_MI_BASE_URI@/1.0/product/manufacturers"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/StrList"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /1.0/product/models/{manufacturer}/{type}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "path"
        required: true
        type: "string"
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - name: "manufacturer"
        in: "path"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/StrList"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.path.manufacturer: "method.request.path.manufacturer"
          integration.request.path.type: "method.request.path.type"
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: PRODUCT_MI_BASE_URI@/1.0/product/models/{manufacturer}/{type}"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "type"
        in: "path"
        required: true
        type: "string"
      - name: "manufacturer"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/StrList"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /1.0/product/types/{manufacturer}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - name: "manufacturer"
        in: "path"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/StrList"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.path.manufacturer: "method.request.path.manufacturer"
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: PRODUCT_MI_BASE_URI@/1.0/product/types/{manufacturer}"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "manufacturer"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/StrList"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /1.0/product/{product}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "product"
        in: "path"
        required: true
        type: "string"
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Product"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.path.product: "method.request.path.product"
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: PRODUCT_MI_BASE_URI@/1.0/product/{product}"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "http"
    delete:
      produces:
      - "application/json"
      parameters:
      - name: "product"
        in: "path"
        required: true
        type: "string"
      - name: "x-channel-name"
        in: "header"
        required: true
        type: "string"
      - name: "x-guid"
        in: "header"
        required: true
        type: "string"
      - name: "x-request-token"
        in: "header"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Product"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          4\d{2}:
            statusCode: "400"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
          5\d{2}:
            statusCode: "500"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestParameters:
          integration.request.path.product: "method.request.path.product"
          integration.request.header.x-guid: "method.request.header.x-guid"
          integration.request.header.x-request-token: "method.request.header.x-request-token"
          integration.request.header.x-channel-name: "method.request.header.x-channel-name"
        uri: "@env: PRODUCT_MI_BASE_URI@/1.0/product/{product}"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        type: "http"
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "product"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Product"
          headers:
            Access-Control-Expose-Headers:
              type: "string"
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Expose-Headers: "'Date'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /v2/products:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "userAgent"
        in: "query"
        required: false
        type: "string"
      - name: "manufacturer"
        in: "query"
        required: true
        type: "string"
      - name: "model"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ProductGETResponseV2"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/Error"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/@lambda:lookup-product@/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /v2/products/{id}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ProductV2"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        403:
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "404 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/@lambda:read-product@/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
definitions:
  ErrorV2:
    type: "object"
    properties:
      message:
        type: "string"
    title: "Error Schema"
  ProductGETResponseV2:
    type: "array"
    items:
      $ref: "#/definitions/ProductV2"
  ProductGETRequestV2:
    type: "object"
    properties:
      userAgent:
        type: "string"
        description: "user agent"
      manufacturer:
        type: "string"
        description: "manufacturer"
      model:
        type: "string"
        description: "modelCode"
      marketingName:
        type: "string"
        description: "marketingName"
  ProductV2:
    type: "object"
    properties:
      productId:
        type: "string"
        description: "productId"
      manufacturer:
        type: "string"
        description: "manufacturer"
      marketingName:
        type: "string"
        description: "marketingName"
      vendor:
        type: "string"
        description: "vendor"
      model:
        type: "string"
        description: "model"
      yearReleased:
        type: "number"
        description: "yearReleased"
      imageURI:
        type: "string"
        description: "imageURI"
      imageThumbURI:
        type: "string"
        description: "imageThumbURI"
      osName:
        type: "string"
        description: "osName"
      osAndroid:
        type: "boolean"
        description: "osAndroid"
      osIOs:
        type: "boolean"
        description: "osIOs"
      mobileDevice:
        type: "boolean"
        description: "mobileDevice"
      isMobilePhone:
        type: "boolean"
        description: "isMobilePhone"
      isTablet:
        type: "boolean"
        description: "isTablet"
      nfc:
        type: "boolean"
        description: "nfc"
      deviceAtlasId:
        type: "number"
        description: "deviceAtlasId"
      userAgent:
        type: "string"
        description: "userAgent"
      camera:
        type: "string"
        description: "megapixels"
      createdDate:
        type: "string"
        description: "created date"
    required: ['productId','manufacturer','model','marketingName']
  ProductsListValueItem:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Only used when returning a Product"
      manufacturer:
        type: "string"
        description: "Manufacturer"
      model:
        type: "string"
        description: "Display model"
      modelCode:
        type: "string"
        description: "modelCode"
      type:
        type: "string"
        description: "type"
      category:
        type: "string"
        description: "Product category"
      description:
        type: "string"
        description: "Product description"
      descriptionKey:
        type: "string"
        description: "Key of Product description"
      thumbImageURI:
        type: "string"
        description: "thumbImageURI"
      imageURI:
        type: "string"
        description: "imageURI"
      softwareVersion:
        type: "string"
        description: "softwareVersion of the Product"
      recommendedRestartTime:
        type: "string"
        description: "Recommended restart time of the product"
      warrantyPeriod:
        type: "integer"
        format: "int32"
        description: "Warranty period"
      active:
        type: "integer"
        format: "int32"
        description: "active flag"
      version:
        type: "integer"
        format: "int32"
        description: "version - used only when updates"
  Product:
    type: "object"
    properties:
      id:
        type: "string"
        description: "Only used when returning a Product"
      manufacturer:
        type: "string"
        description: "Manufacturer"
      model:
        type: "string"
        description: "Display model"
      modelCode:
        type: "string"
        description: "modelCode"
      type:
        type: "string"
        description: "type"
      category:
        type: "string"
        description: "Product category"
      description:
        type: "string"
        description: "Product description"
      descriptionKey:
        type: "string"
        description: "Key of Product description"
      thumbImageURI:
        type: "string"
        description: "thumbImageURI"
      imageURI:
        type: "string"
        description: "imageURI"
      softwareVersion:
        type: "string"
        description: "softwareVersion of the Product"
      recommendedRestartTime:
        type: "string"
        description: "Recommended restart time of the product"
      warrantyPeriod:
        type: "integer"
        format: "int32"
        description: "Warranty period"
      active:
        type: "integer"
        format: "int32"
        description: "active flag"
      version:
        type: "integer"
        format: "int32"
        description: "version - used only when updates"
  ProductsList:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        $ref: "#/definitions/ProductsListValueItem"
  StrList:
    type: "array"
    items:
      type: "string"
  Error:
    type: "object"
    properties:
      message:
        type: "string"
      type:
        type: "string"
      code:
        type: "number"
      requestId:
        type: "string"
    title: "Error Schema"
