---
swagger: '2.0'
info:
  description: API to return diagnostics
  version: "4"
  title: DeviceDiagnostics
  contact:
    email: geir.sjurseth@ebuilder.com
host: apigw-test.ebuilder.io
basePath: "/devicediagnostics"
schemes:
- https
paths:
  "/v2/battery/{deviceId}":
    options:
      parameters:
      - name: deviceId
        in: path
        description: Device ID of the user's phone
        required: true
        type: integer
        format: int64
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-guid,x-channel-name,x-request-token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
    get:
      tags:
      - public operations
      summary: retrieves battery histogram for last 7 days
      produces:
      - application/json
      parameters:
      - name: deviceId
        in: path
        description: Device ID of the user's phone
        required: true
        type: integer
        format: int64
      - name: userId
        in: query
        description: User ID owner of the device
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/BatteryHistogram"
        '400':
          description: Invalid ID supplied
        '404':
          description: Device not found
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
        uri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/@lambda:battery-avg-trend@/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  "/v2/swversion/{deviceId}":
    options:
      parameters:
      - name: deviceId
        in: path
        description: Device ID of the user's phone
        required: true
        type: integer
        format: int64
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-guid,x-channel-name,x-request-token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
    get:
      tags:
      - version
      summary: retrieves breakdown of swversions for device and whether this device is on latest known version in the community
      produces:
      - application/json
      parameters:
      - name: deviceId
        in: path
        description: Device ID of the user's phone
        required: true
        type: integer
        format: int64
      - name: userId
        in: query
        description: User ID owner of the device
        required: true
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/SoftwareVersions"
        '400':
          description: Invalid ID supplied
        '403':
          description: Unauthorized you Schmuck!
        '404':
          description: Device not found
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
        uri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/@lambda:device-version-query@/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  "/v3/swversion/{deviceId}":
    options:
      parameters:
      - name: deviceId
        in: path
        description: Device ID of the user's phone
        required: true
        type: string
      - name: osVersion
        in: query
        description: OS version (only for IOS)
        required: false
        type: string
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-guid,x-channel-name,x-request-token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
    get:
      tags:
      - version
      summary: retrieves breakdown of swversions for device and whether this device is on latest known version in the community
      produces:
      - application/json
      parameters:
      - name: deviceId
        in: path
        description: Device ID of the user's phone
        required: true
        type: string
      - name: osVersion
        in: query
        description: IOS version
        required: false
        type: string
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/SoftwareVersions"
        '400':
          description: Invalid ID supplied
        '403':
          description: Unauthorized you Schmuck!
        '404':
          description: Device not found
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
        uri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/@lambda:software-version-query@/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  "/v2/devices/{deviceId}":
    options:
      parameters:
      - name: deviceId
        in: path
        description: Device ID of the user's phone
        required: true
        type: integer
        format: int64
      - name: userId
        in: query
        description: User ID owner of the device
        required: false
        type: string
      - name: tenant
        in: query
        description: tenant associated with the device
        required: false
        type: string
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-guid,x-channel-name,x-request-token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}\n"
        requestTemplates:
          application/json: "{\n  \"statusCode\" : 200\n}\n"
        passthroughBehavior: "when_no_match"
        type: "mock"
    get:
      tags:
      - public operations
      summary: retrieves user's device information like Model, OS, battery consumption, screen brightness
      produces:
      - application/json
      parameters:
      - name: deviceId
        in: path
        description: Device ID of the user's phone
        required: true
        type: integer
        format: int64
      - name: userId
        in: query
        description: User ID owner of the device
        required: false
        type: string
      - name: tenant
        in: query
        description: tenant associated with the device
        required: false
        type: string
        
      responses:
        '200':
          description: successful operation
          schema:
            "$ref": "#/definitions/DeviceData"
        '400':
          description: bad request, validation, param {x} required
        '500':
          description: Error occurred, {error}
      security:
      - api_key: []
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
        uri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/@lambda:get-device-view-data@/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
        
  /v1/storage/{deviceId}:
    get:
      summary: 'Get Storage Info'
      produces:
      - "application/json"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/Storage"
        400:
          description: "400 response"
          schema:
            $ref: "#/definitions/ErrorMessage"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        uri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/@lambda:storage-facade@/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,x-guid,x-channel-name,x-request-token,Authorization,x-api-key'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            responseTemplates:
              application/json: "{}"
        requestTemplates:
          application/json: "{  \"statusCode\" : 200 }"
        passthroughBehavior: "when_no_match"
        type: "mock"

        
securityDefinitions:
  api_key:
    type: apiKey
    name: x-api-key
    in: header
definitions:
  SoftwareVersions:
    type: object
    required:
    - "latestOsVersion"
    - "version"
    - "data"
    - "make"
    - "model"
    - "platform"
    properties:
      latestOsVersion:
        type: object
        example: false
        format: boolean
      make:
        type: object
        example: "6.1.1"
        format: string  
      model:
        type: object
        example: "6.1.1"
        format: string  
      platform:
        type: object
        example: "6.1.1"
        format: string
      version:
        type: object
        example: "6.1.1"
        format: string  
      data:
        type: object
        properties: {}
  BatteryHistogram:
    type: object
    properties:
      device:
        type: object
        properties:
          average:
            type: number
          days:
            type: object
            properties:
              day1:
                type: number
              day2:
                type: number
              day3:
                type: number
              day4:
                type: number
      community:
        type: object
        properties:
          average:
            type: number
          days:
            type: object
            properties:
              day1:
                type: number
              day2:
                type: number
              day3:
                type: number
              day4:
                type: number
              day5:
                type: number
              day6:
                type: number
              day7:
                type: number
  DeviceData:
    type: object
  Storage:
    type: "object"
    properties: {}
  ErrorMessage:
    type: "object"
    properties:
      rootCause:
        type: "string"
